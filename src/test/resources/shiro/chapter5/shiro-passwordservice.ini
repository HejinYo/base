[main]
#passwordService使用DefaultPasswordService，如果有必要也可以自定义；
passwordService=org.apache.shiro.authc.credential.DefaultPasswordService
#hashService定义散列密码使用的HashService，默认使用DefaultHashService（默认SHA-256算法）；
hashService=org.apache.shiro.crypto.hash.DefaultHashService
passwordService.hashService=$hashService

#hashFormat用于对散列出的值进行格式化，默认使用Shiro1CryptFormat，
#另外提供了Base64Format和HexFormat，对于有salt的密码请自定义实现ParsableHashFormat然后把salt格式化到散列值中；
hashFormat=org.apache.shiro.crypto.hash.format.Shiro1CryptFormat
passwordService.hashFormat=$hashFormat

#hashFormatFactory用于根据散列值得到散列的密码和salt；因为如果使用如SHA算法，那么会生成一个salt，
#此salt需要保存到散列后的值中以便之后与传入的密码比较时使用；默认使用DefaultHashFormatFactory；
hashFormatFactory=org.apache.shiro.crypto.hash.format.DefaultHashFormatFactory
passwordService.hashFormatFactory=$hashFormatFactory

#passwordMatcher使用PasswordMatcher，其是一个CredentialsMatcher实现；
passwordMatcher=org.apache.shiro.authc.credential.PasswordMatcher
passwordMatcher.passwordService=$passwordService

myRealm=com.basetest.shiro.chapter5.hash.realm.MyRealm
myRealm.passwordService=$passwordService
myRealm.credentialsMatcher=$passwordMatcher
securityManager.realms=$myRealm
